- table:
    schema: oauth
    name: token
  insert_permissions:
  - role: server
    permission:
      check: {}
      columns:
      - access_token
      - expires
      - refresh_token
      - scope
      - user_id
      backend_only: false
  select_permissions:
  - role: server
    permission:
      columns:
      - access_token
      - expires
      - refresh_token
      - scope
      - user_id
      filter: {}
  delete_permissions:
  - role: server
    permission:
      filter: {}
- table:
    schema: public
    name: comment
  object_relationships:
  - name: media
    using:
      foreign_key_constraint_on: media_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: user
    permission:
      check: {}
      set:
        user_id: x-hasura-User-Id
      columns:
      - media_id
      - media_timestamp
      - text
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - media_timestamp
      - text
      - created
      - id
      - media_id
      - user_id
      filter: {}
- table:
    schema: public
    name: like
  object_relationships:
  - name: media
    using:
      foreign_key_constraint_on: media_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: user
    permission:
      check: {}
      set:
        user_id: x-hasura-User-Id
      columns:
      - media_id
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - user_id
      - media_id
      - created
      filter: {}
  delete_permissions:
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: media
  array_relationships:
  - name: comments
    using:
      foreign_key_constraint_on:
        column: media_id
        table:
          schema: public
          name: comment
  - name: likes
    using:
      foreign_key_constraint_on:
        column: media_id
        table:
          schema: public
          name: like
  - name: tags
    using:
      foreign_key_constraint_on:
        column: media_id
        table:
          schema: public
          name: tag
  insert_permissions:
  - role: server
    permission:
      check: {}
      columns:
      - bpm
      - data_folder
      - season
      - title
      - torrent
      - youtube_url
      - recorded_date
      - stereo_mix
      - tracks
      - id
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - bpm
      - data_folder
      - season
      - title
      - torrent
      - youtube_url
      - recorded_date
      - stereo_mix
      - tracks
      - id
      filter: {}
  - role: server
    permission:
      columns:
      - id
      - title
      - data_folder
      - stereo_mix
      - recorded_date
      - torrent
      - tracks
      - bpm
      - youtube_url
      - season
      filter: {}
  - role: user
    permission:
      columns:
      - id
      - title
      - data_folder
      - stereo_mix
      - recorded_date
      - torrent
      - tracks
      - bpm
      - youtube_url
      - season
      filter: {}
  update_permissions:
  - role: server
    permission:
      columns:
      - id
      - title
      - data_folder
      - stereo_mix
      - recorded_date
      - torrent
      - tracks
      - bpm
      - youtube_url
      - season
      filter: {}
      check: {}
- table:
    schema: public
    name: tag
  object_relationships:
  - name: media
    using:
      foreign_key_constraint_on: media_id
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - media_id
      - name
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - name
      - media_id
      - score
      filter: {}
- table:
    schema: public
    name: user
  array_relationships:
  - name: comments
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: comment
  - name: likes
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: like
  insert_permissions:
  - role: server
    permission:
      check: {}
      columns:
      - discord_id
      - name
      backend_only: false
  select_permissions:
  - role: server
    permission:
      columns:
      - discord_id
      - name
      - id
      filter: {}
  - role: user
    permission:
      columns:
      - id
      - name
      filter:
        id:
          _eq: X-Hasura-User-Id
